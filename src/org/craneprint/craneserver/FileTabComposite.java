package org.craneprint.craneserver;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Button;
import com.vaadin.ui.Button.ClickEvent;
import com.vaadin.ui.Button.ClickListener;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.Label;
import com.vaadin.ui.TextArea;
import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;

public class FileTabComposite extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Button deleteButton;
	@AutoGenerated
	private Button printButton;
	@AutoGenerated
	private TextArea notesArea;
	@AutoGenerated
	private TextField copiesField;
	private Label copiesLabel;
	private HorizontalLayout copiesLayout;
	private Label notesLabel;
	private HorizontalLayout notesLayout;
	
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public FileTabComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// copiesLabel
		copiesLabel = new Label();
		copiesLabel.setImmediate(false);
		copiesLabel.setValue("Copies:");
		copiesLabel.setWidth("-1px");
		copiesLabel.setHeight("-1px");
		// copiesField
		copiesField = new TextField();
		copiesField.setImmediate(false);
		copiesField.setWidth("100.0%");
		copiesField.setHeight("-1px");
		// copiesLayout
		copiesLayout = new HorizontalLayout();
		copiesLayout.setImmediate(false);
		copiesLayout.setWidth("100%");
		copiesLayout.setHeight("-1px");
		copiesLayout.addComponent(copiesLabel);
		copiesLayout.addComponent(copiesField);
		mainLayout.addComponent(copiesLayout);
		
		// copiesLabel
		notesLabel = new Label();
		notesLabel.setImmediate(false);
		notesLabel.setValue("Notes: ");
		notesLabel.setWidth("-1px");
		notesLabel.setHeight("-1px");
		// notesArea
		notesArea = new TextArea();
		notesArea.setImmediate(false);
		notesArea.setWidth("100.0%");
		notesArea.setHeight("125px");
		// copiesLayout
		notesLayout = new HorizontalLayout();
		notesLayout.setImmediate(false);
		notesLayout.setWidth("100%");
		notesLayout.setHeight("-1px");
		notesLayout.addComponent(notesLabel);
		notesLayout.addComponent(notesArea);
		mainLayout.addComponent(notesLayout);
				
		// printButton
		printButton = new Button();
		printButton.setCaption("Print");
		printButton.setImmediate(true);
		printButton.setWidth("100.0%");
		printButton.setHeight("-1px");
		printButton.addClickListener(new ClickListener(){
		    public void buttonClick(ClickEvent event){
		    	// Delete GCodeFile and remove it from the arraylist and accordion
		    	Component c = getParent();
		    	Component d = c.getParent();
		    	Component e = d.getParent();
		    	Component f = e.getParent();
		    	Component g = f.getParent();
		    	PrintComposite h = (PrintComposite)g.getParent();
		    	int copies = Integer.parseInt(copiesField.getValue());
		    	String notes = notesArea.getValue();
		    	h.printFile(copies, notes);
		    }
		  }
		);
		mainLayout.addComponent(printButton);
		
		// deleteButton
		deleteButton = new Button();
		deleteButton.setCaption("Delete");
		deleteButton.setImmediate(true);
		deleteButton.setWidth("100.0%");
		deleteButton.setHeight("-1px");
		deleteButton.addClickListener(new ClickListener(){
		    public void buttonClick(ClickEvent event){
		    	// Deletes GCodeFile and remove it from the arraylist and accordion
		    	Component c = getParent();
		    	Component d = c.getParent();
		    	Component e = d.getParent();
		    	Component f = e.getParent();
		    	Component g = f.getParent();
		    	PrintComposite h = (PrintComposite)g.getParent();
		    	h.deleteFile();
		    }
		  }
		);
		mainLayout.addComponent(deleteButton);
		
		return mainLayout;
	}

}
